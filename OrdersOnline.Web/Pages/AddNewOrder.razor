@page "/addneworder"
@inherits AddNewOrderBase

<EditForm Model="@OrderDTO" OnValidSubmit="@HandleValidSubmit">

    <div class="container border">
        <h3>Place new Order</h3>
        <hr />
  
        <form>
            <div class="form-group">
                <label for="customer-name">Customer Name:</label>
                <input type="text" class="form-control" id="customer-name" placeholder="Enter customer name" @bind="@OrderDTO.ClientName" />
            </div>

            <div class="form-group">
                <label for="order-date">Order Date:</label>
                <input type="date" class="form-control" id="order-date" @bind="@OrderDTO.CreateDate" />
            </div>

            <div class="form-group">
                <label for="additional-info">Additional info:</label>
                <input type="text" class="form-control" id="additional-info" @bind="@OrderDTO.AdditionalInfo" />
            </div>

            <div class="form-group">
                <h4>Order Lines:</h4>
                @foreach (var orderLine in OrderDTO.OrderLines)
                {
                    <div>
                        <label for="product-name">Product:</label>
                        <input type="text" class="form-control" id="product-name" @bind="@orderLine.Product" />

                        <label for="price">Price:</label>
                        <input type="number" class="form-control" id="price" @bind="@orderLine.Price" />

                        <button type="button" class="btn btn-danger" @onclick="() => RemoveOrderLine(OrderDTO.OrderLines.IndexOf(orderLine))">Remove</button>
                    </div>
                }

                <button type="button" class="btn btn-primary" @onclick="AddOrderLine">Add Order Line</button>
            </div>

            <!--<button type="submit" class="btn btn-success" @onclick="AddToOrders_Click(OrderDTO)">Create Order</button>-->
            <button @onclick="(() => AddToOrders_Click(OrderDTO))" class="btn btn-success" type="submit">Create Order</button>
        </form>
    </div>

</EditForm>

@code {
    private int values = 0;
    private void AddValue() => values++;

    public async Task HandleValidSubmit()
    {
        //Logger.LogInformation("HandleValidSubmit called");

        // Process the valid form
        await Task.CompletedTask;
    }
}
