@page "/updateorder/{id}"
@inherits UpdateOrderBase

<h3>UpdateOrder</h3>

@if(OrderDTO == null)
{
    <p>Loading...</p>
} 
else
{
    <EditForm Model="@OrderDTO" OnValidSubmit="HandleValidSubmit">

        <div class="container border">
            <h3 class="mb-4 mt-4">Place new Order</h3>
            <button type="submit" class="btn btn-success mb-4">Update Order</button>
            <hr />
            <div class="form-group">
                <label for="customer-name">Customer Name:</label>
                <input type="text" class="form-control" id="customer-name" placeholder="Enter customer name" @bind="@OrderDTO.ClientName" />
            </div>

            <div class="form-group">
                <label for="order-date">Order Date:</label>
                <input type="date" class="form-control" id="order-date" @bind="@OrderDTO.CreateDate" />
            </div>

            <div class="form-group">
                <label for="additional-info">Additional info:</label>
                <input type="text" class="form-control" id="additional-info" @bind="@OrderDTO.AdditionalInfo" />
            </div>

            <div class="form-group">
                <h2 class="mt-4">Order Lines:</h2>
                @foreach (var orderLine in OrderDTO.OrderLines)
                {
                    <div>
                        <label for="product-name">Product:</label>
                        <input type="text" class="form-control" id="product-name" @bind="@orderLine.Product" placeholder="Enter product name" />

                        <label for="price">Price:</label>
                        <input type="number" step="0.01" class="form-control" id="price" @bind="@orderLine.Price" placeholder="Enter product price" />

                        <button type="submit" class="btn btn-danger mb-4" @onclick=" async () => await RemoveOrderLine(OrderDTO.OrderLines.IndexOf(orderLine))">Remove</button>
                    </div>
                }

                <button type="button" class="btn btn-primary mb-4" @onclick="AddOrderLine">Add Order Line</button>
            </div>

            <button type="submit" class="btn btn-success mb-4">Update Order</button>

        </div>

    </EditForm>
}


@code {
    protected async Task HandleValidSubmit()
    {
        await UpdateOrders(OrderDTO);
        //this.StateHasChanged();
        NavigationManager.NavigateTo("/");
    }
}