// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrdersOnline.Api.Data;

#nullable disable

namespace OrdersOnline.Api.Migrations
{
    [DbContext(typeof(OrdersOnlineDbContext))]
    [Migration("20230323234513_InitialCreateUpdate")]
    partial class InitialCreateUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrdersOnline.Api.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AdditionalInfo = "N/A",
                            ClientName = "John Smith",
                            CreateDate = new DateTime(2023, 3, 23, 0, 45, 13, 510, DateTimeKind.Local).AddTicks(2765),
                            OrderPrice = 50.00m,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 2,
                            AdditionalInfo = "Will be cancelled due to product unavailability",
                            ClientName = "Jane Doe",
                            CreateDate = new DateTime(2023, 3, 22, 0, 45, 13, 510, DateTimeKind.Local).AddTicks(2861),
                            OrderPrice = 75.00m,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 3,
                            AdditionalInfo = "Will be delivered to front desk",
                            ClientName = "Bob Johnson",
                            CreateDate = new DateTime(2023, 3, 21, 0, 45, 13, 510, DateTimeKind.Local).AddTicks(2865),
                            OrderPrice = 100.00m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("OrdersOnline.Api.Entities.OrderLine", b =>
                {
                    b.Property<int>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderLineId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            OrderLineId = 1,
                            OrderId = 1,
                            Price = 25.00m,
                            Product = "Product A"
                        },
                        new
                        {
                            OrderLineId = 2,
                            OrderId = 1,
                            Price = 25.00m,
                            Product = "Product B"
                        },
                        new
                        {
                            OrderLineId = 3,
                            OrderId = 2,
                            Price = 50.00m,
                            Product = "Product C"
                        },
                        new
                        {
                            OrderLineId = 4,
                            OrderId = 2,
                            Price = 25.00m,
                            Product = "Product D"
                        },
                        new
                        {
                            OrderLineId = 5,
                            OrderId = 3,
                            Price = 50.00m,
                            Product = "Product E"
                        },
                        new
                        {
                            OrderLineId = 6,
                            OrderId = 3,
                            Price = 50.00m,
                            Product = "Product F"
                        });
                });

            modelBuilder.Entity("OrdersOnline.Api.Entities.OrderLine", b =>
                {
                    b.HasOne("OrdersOnline.Api.Entities.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrdersOnline.Api.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
